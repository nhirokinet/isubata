
user  www-data;
worker_processes  1;
worker_rlimit_nofile 262140;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  65535;
  multi_accept on;
  use epoll;
}

http {
  include /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format with_time '$remote_addr - $remote_user [$time_local] '
  '"$request" $status $body_bytes_sent '
  '"$http_referer" "$http_user_agent" $request_time';
  access_log /var/log/nginx/access.log with_time;
  # 最後はこれを有効にする
  #access_log off;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  aio threads;
  open_file_cache max=1024 inactive=60s;
  open_file_cache_errors on;

  keepalive_timeout 65;

  server_tokens off;

  # とりあえずoffっておくけどonにしたほうが早ければそうする
  gzip  on;
  gzip_vary on;
  gzip_proxied any;
  gzip_types text/plain text/html text/css application/json application/javascript application/xml application/xml+rss;
  #gzip_static on;

  geo $dollar {
    default "$";
  }

  client_body_buffer_size 2048k;
  # debian形式のconf分割配置をやめて，nginx.confにまとめた
  #include /etc/nginx/conf.d/*.conf;
  server {
    listen       80;
    #server_name  localhost;

    # cache control

    proxy_request_buffering on;
    client_body_buffer_size 2048k;

    ### ここから isubataのdefault ###
    client_max_body_size 20M;
    root /home/isucon/isubata/webapp/public;

    location /favicon.ico {
    	add_header Cache-Control "public";
    	expires 24h;
    }
    location /fonts/ { 
    	add_header Cache-Control "public";
    	expires 24h;
    }
    location /js/ { 
    	add_header Cache-Control "public";
    	expires 24h;
    }
    location /css/ { 
    	add_header Cache-Control "public";
    	expires 24h;
    }
    location /icons/ { 
    	add_header Cache-Control "public";
    	expires 24h;
    }
    location /message { 
        rewrite ^(.+)$ /apimessage.php last;
    }
    location /fetch { 
        rewrite ^(.+)$ /apifetch/apifetch.php last;
    }

    location = /register {
    	if ($request_method = GET ) {
        	rewrite ^(.+)$ /register.html last;
	}
    	if ($request_method = POST ) {
	        rewrite ^(.+)$ /index.php/register last;
	}
    }

    location /apifetch/apifetch.php {
	    root           /home/isucon/isubata/webapp/php;
	    include        fastcgi_params;
	    fastcgi_pass   unix:/run/php/php7.1-fpm-fetch.sock;

		#fastcgi_index  index.php;
	    fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
	    fastcgi_param  SCRIPT_NAME     $fastcgi_script_name;
    }

    index index.php;
    location / {
      if (!-f $request_filename) {
        rewrite ^(.+)$ /index.php$1 last;
      }
      proxy_set_header Host $http_host;
      proxy_pass http://unix:/run/php/php7.1-fpm.sock:/;
    }

    # fpm
    location ~ [^/]\.php(/|$) {
      root           /home/isucon/isubata/webapp/php;
      include        fastcgi_params;
      fastcgi_pass   unix:/run/php/php7.1-fpm.sock;

      fastcgi_index  index.php;
      fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param  SCRIPT_NAME     $fastcgi_script_name;

      # 直接フルパスを書いても良い
      #fastcgi_param  SCRIPT_FILENAME  /path/to/script.php
    }

    location = /unko.php {
      include        fastcgi_params;
      fastcgi_pass   unix:/run/php/php7.1-fpm.sock;
      fastcgi_param  SCRIPT_NAME     $fastcgi_script_name;
      fastcgi_param  SCRIPT_FILENAME  /home/isucon/isubata/webapp/php/unko.php;
    }

    #location = a {
    #  # cookieをsetできる
    #  add_header Set-Cookie hoge=;
    #
    #  # query parameterに応じてなんかさせる
    #  if ($arg_hoge = 'a') {
    #    # argument name in the request line
    #  }
    #
    #  # cookieの中身に応じてなんかさせる
    #  if ($cookie_hoge = 'a') {
    #    # the name cookie
    #  }

    # アレな感じに直接中身を書いても良い
#      default_type text/html;
#            return 200 '<!DOCTYPE html>
#<html>
#</html>
#';
    #}

    # アレ
    #location = /favicon.ico {
    #  access_log off;
    #  return 404;
    #  break;
    #}

    #error_page  404              /404.html;
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #  root   /usr/share/nginx/html;
    #}
  }
}
